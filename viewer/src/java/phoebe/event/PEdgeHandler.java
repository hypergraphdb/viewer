package phoebe.event;import edu.umd.cs.piccolo.event.*;import edu.umd.cs.piccolox.handles.*;import phoebe.*;import java.awt.event.*;import java.awt.geom.*;import org.hypergraphdb.viewer.HGVNetworkView;/** * The FEdge selection and modification Event handler * * @author Mike Smoot ( mes5k ) *  * @version $Revision: 1.9 $ *  */public class PEdgeHandler extends PBasicInputEventHandler{    HGVNetworkView view;	/**	 * Creates a new PEdgeHandler object.	 * 	 * @param view The View that this handler is attached to	 * 	 */	public PEdgeHandler(HGVNetworkView view)	{		super();		this.view = view;		setEventFilter(new PInputEventFilter(InputEvent.BUTTON1_MASK));	}	/**	 * 	 * Listern for MOuseClicked Events	 * 	 * 	 * 	 * @param event the event	 * 	 */	public void mouseClicked(PInputEvent event)	{		if (event.getPickedNode() instanceof PEdgeView)		{			PEdgeView ev = (PEdgeView) event.getPickedNode();			if (ev.intersects(new Point2D.Double(event.getPosition().getX(),					event.getPosition().getY())))			{				// If we get a shift click on the line, then add a handle if one				// doesn't already exist at that point.				// If a handle already exists, ignore the click here				// (i.e. don't deselect the line).				if (event.isControlDown())				{					if (ev.isSelected()							&& !ev.getBend().handleAlreadyExists(									event.getPosition()))						ev.getBend().addHandle(event.getPosition());					// Otherwise, select/deselect the edge.					// also fire notification events				} // else // {				// if (ev.isSelected() ) {				// ev.setSelected(false);				// // PNotificationCenter.defaultCenter().postNotification(				// "EDGE_SELECTION_REMOVED_NOTIFICATION", ev );				// } else {				// ev.setSelected(true);				// //PNotificationCenter.defaultCenter().postNotification(				// "EDGE_SELECTION_ADDED_NOTIFICATION", ev );				// }				// }			}		} else if (event.getPickedNode() instanceof PHandle)		{			PHandle h = (PHandle) event.getPickedNode();			PEdgeView ev = (PEdgeView) h.getParent();			// We've clicked on a handle... remove it if shift is down.			if (event.isControlDown())			// ev.removeHandle( event.getPosition() );				((phoebe.util.Bend) ev.getBend()).removeHandle(h);		}	}}